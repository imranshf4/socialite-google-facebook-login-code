$totalOrdersSubQuery = DB::table('order_items')
                ->join('orders', 'orders.id', '=', 'order_items.order_id')
                ->where('orders.status', '!=', 9)
                ->select(
                    'order_items.product_id',
                    // DB::raw('COUNT(DISTINCT order_items.order_id) as total_orders')
                    DB::raw('COUNT(order_items.order_id) as total_orders')
                )
                ->groupBy('order_items.product_id');


            $productQuery = Product::leftJoinSub($totalOrdersSubQuery, 'oi', function ($join) {
                $join->on('products.id', '=', 'oi.product_id');
            })
                ->with(['purchaseItem'])
                ->select('products.*', DB::raw('IFNULL(oi.total_orders, 0) as total_orders'))
                ->orderByRaw('oi.total_orders = 0 DESC')
                ->orderBy('oi.total_orders', $sort_product_by_order)
                ->orderBy('products.created_at', 'asc');


SELECT 
    product_id, 
    COUNT(*) as row_count,
    SUM(quantity) as total_quantity,
    COUNT(DISTINCT order_id) as unique_orders
FROM order_items
WHERE product_id = 449
GROUP BY product_id;


SELECT 
    products.id AS product_id,
    products.name,
    IFNULL(oi.total_orders, 0) AS total_orders, 
    IFNULL(oi.last_ordered_date, NULL) AS last_ordered_date
FROM products
LEFT JOIN (
    SELECT 
        order_items.product_id, 
        COUNT(order_items.order_id) AS total_orders,
        MAX(orders.created_at) AS last_ordered_date
    FROM order_items
    INNER JOIN orders ON orders.id = order_items.order_id
    WHERE orders.status IN (1, 2, 3, 4, 5, 6, 8, 9)
    GROUP BY order_items.product_id
) AS oi ON products.id = oi.product_id
ORDER BY total_orders DESC, products.created_at ASC;
